---
- name: Ensure needed packages exist
  ansible.builtin.package:
    name: "{{ vimplug_packages }}"
    state: present

- block:
  - name: Ensure needed directory exists
    ansible.builtin.file:
      path: "{{ vimplug_vim_datadir }}/autoload"
      state: directory

  - name: Check if vim-plug is installed
    ansible.builtin.stat:
      path: "{{ vimplug_vim_datadir }}/autoload/plug.vim"
    register: vimplug_installed

  - name: Installing vim-plug
    ansible.builtin.get_url:
      url: https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
      dest: "{{ vimplug_vim_datadir }}/autoload/plug.vim"
    when: (vimplug_installed.stat.isreg is not defined) or
          (not vimplug_installed.stat.isreg)

  - name: Ensure vimrc exists
    ansible.builtin.file:
      path: "{{ vimplug_vimrc_path }}"
      state: touch
      modification_time: preserve
      access_time: preserve

  - name: Ensure needed lines exist
    ansible.builtin.lineinfile:
      path: "{{ vimplug_vimrc_path }}"
      line: "{{ item }}"
      insertbefore: BOF
    loop:
    - call plug#end()
    - "call plug#begin('{{ vimplug_vim_datadir }}/plugged')"

  - name: Putting plugins into vimrc
    ansible.builtin.lineinfile:
      path: "{{ vimplug_vimrc_path }}"
      line: "Plug '{{ item.name }}'{{ ', ' ~ item.options if item.options is defined else '' }}"
      insertbefore: "^call plug#end()"
      firstmatch: yes
    loop: "{{ vimplug_plugins }}"
    when: item is defined
  become: "{{ vimplug_become | bool }}"
  notify: Running PlugInstall
